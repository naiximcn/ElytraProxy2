From 67339d7a864a320b2db0cf039464b2b00cf81e11 Mon Sep 17 00:00:00 2001
From: mdxd44 <mdxd44@ely.su>
Date: Sat, 5 Jun 2021 07:07:10 +0900
Subject: [PATCH] Update Checker


diff --git a/proxy/src/main/java/com/velocitypowered/proxy/Velocity.java b/proxy/src/main/java/com/velocitypowered/proxy/Velocity.java
index 25b3a7c4..fc36650b 100644
--- a/proxy/src/main/java/com/velocitypowered/proxy/Velocity.java
+++ b/proxy/src/main/java/com/velocitypowered/proxy/Velocity.java
@@ -67,6 +67,8 @@ public class Velocity {
 
     double bootTime = (System.currentTimeMillis() - startTime) / 1000d;
     logger.info("Done ({}s)!", new DecimalFormat("#.##").format(bootTime));
+    logger.warn("PLEASE REPORT ALL BUGS, ERRORS AND JUST NOTES"
+            + " OR SUGGESTIONS TO ME IN PM (mdxd44#5001)");
     server.getConsoleCommandSource().start();
 
     // If we don't have a console available (because SimpleTerminalConsole returned), then we still
diff --git a/proxy/src/main/java/ru/elytrium/elytraproxy/ElytraProxy.java b/proxy/src/main/java/ru/elytrium/elytraproxy/ElytraProxy.java
index d7b492b3..337f03d8 100644
--- a/proxy/src/main/java/ru/elytrium/elytraproxy/ElytraProxy.java
+++ b/proxy/src/main/java/ru/elytrium/elytraproxy/ElytraProxy.java
@@ -27,7 +27,13 @@ import com.velocitypowered.proxy.network.Connections;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import io.netty.channel.ChannelPipeline;
 
+import java.io.BufferedReader;
 import java.io.File;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.net.URL;
+import java.net.URLConnection;
+import java.nio.charset.StandardCharsets;
 
 import lombok.Getter;
 import net.kyori.adventure.identity.Identity;
@@ -68,6 +74,7 @@ public class ElytraProxy {
     // BotFilter end
     registerCommand(velocityServer);
     //initDatabase(velocityServer);
+    checkForUpdates();
     logger.info("ElytraProxy was loaded.");
   }
 
@@ -154,4 +161,24 @@ public class ElytraProxy {
               NamedTextColor.RED));
     }
   }
+
+  @SuppressFBWarnings("NP_IMMEDIATE_DEREFERENCE_OF_READLINE")
+  private void checkForUpdates() {
+    try {
+      URL url = new URL("https://raw.githubusercontent.com/Elytrium/ElytraProxy/master/VERSION");
+      URLConnection conn = url.openConnection();
+      conn.setConnectTimeout(1200);
+      conn.setReadTimeout(1200);
+      try (BufferedReader in = new BufferedReader(
+              new InputStreamReader(conn.getInputStream(), StandardCharsets.UTF_8))) {
+        if (!in.readLine().trim().equalsIgnoreCase(Settings.IMP.VERSION)) {
+          logger.error("****************************************");
+          logger.warn("The new update was found, please update.");
+          logger.error("****************************************");
+        }
+      }
+    } catch (IOException ex) {
+      logger.warn("Unable to check for updates.", ex);
+    }
+  }
 }
diff --git a/proxy/src/main/java/ru/elytrium/elytraproxy/config/Config.java b/proxy/src/main/java/ru/elytrium/elytraproxy/config/Config.java
index e81e39af..8d8b2ff3 100644
--- a/proxy/src/main/java/ru/elytrium/elytraproxy/config/Config.java
+++ b/proxy/src/main/java/ru/elytrium/elytraproxy/config/Config.java
@@ -106,6 +106,12 @@ public class Config {
 
   public boolean load(File file) {
     if (!file.exists()) {
+      /* TODO: дописать там крч типа ага да
+      logger.error("****************************************");
+      logger.warn("тут короче ссылка на плагины остальные будет,"
+              + "типа зацени наши другие плагины ёпт.");
+      logger.error("****************************************");
+      */
       return false;
     }
     Configuration yml;
diff --git a/proxy/src/main/java/ru/elytrium/elytraproxy/config/Settings.java b/proxy/src/main/java/ru/elytrium/elytraproxy/config/Settings.java
index 910001fd..a1b1645f 100644
--- a/proxy/src/main/java/ru/elytrium/elytraproxy/config/Settings.java
+++ b/proxy/src/main/java/ru/elytrium/elytraproxy/config/Settings.java
@@ -17,20 +17,18 @@
 
 package ru.elytrium.elytraproxy.config;
 
-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
-
 import java.io.File;
 import java.util.Arrays;
 import java.util.List;
 
-@SuppressFBWarnings({"UWF_UNWRITTEN_FIELD", "URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"}) //temp
 public class Settings extends Config {
 
   @Ignore
   public static final Settings IMP = new Settings();
 
   @Final
-  public String VERSION = "beta";
+  @Comment("Please, don't touch.")
+  public String VERSION = "0.1.0";
 
   @Create
   public MAIN_SETTINGS MAIN_SETTINGS;
-- 
2.24.1.windows.2

